# notifyd.rb system resources
# This is process id of notifyd parent service, integrity

UserParameter=notifyd.parent.pid,ps aux | grep -v grep | grep notifyd.rb | grep root | awk '{ print $2 }'

#This is cpu run time of notifyd parent service, unit: %

UserParameter=notifyd.parent.cpu.time,ps aux | grep -v grep | grep notifyd.rb | grep root | awk '{ print $3 }'
# This is ratio of the parent process’s resident set size to the physical memory on the machine, unit: %
UserParameter=notifyd.parent.mem.ratio,ps aux | grep -v grep | grep notifyd.rb | grep root | awk '{ print $4 }'

# This is virtual memory usage of entire parent process (in KB)
UserParameter=notifyd.parent.virtual.mem,ps aux | grep -v grep |grep notifyd.rb | grep root | awk '{ print $5 }'

# This is resident set size, the non-swapped physical memory that parent task has used (in KB)
UserParameter=notifyd.parent.resid.mem,ps aux | grep -v grep |grep notifyd.rb | grep root | awk '{ print $6 }'

# This is process id of notifyd child service, integrity
UserParameter=notifyd.child.pid,ps aux | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }'

#This is cpu run time of notifyd child service, unit: %
UserParameter=notifyd.child.cpu.time,ps aux | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $3 }'

# This is ratio of the child process’s resident set size to the physical memory on the machine, unit: %
UserParameter=notifyd.child.mem.ratio,ps aux | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $4 }'

# This is virtual memory usage of entire child process (in KB)
UserParameter=notifyd.child.virtual.mem,ps aux | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $5 }'

# This is resident set size, the non-swapped physical memory that child task has used (in KB)
UserParameter=notifyd.child.resid.mem,ps aux | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $6 }'


# notifyd.rb network status >>>>> This will be an application
# This is to get estabilshed connection of notifyd.rb child process, including inbound and outbound, sum number. return value will be integrity.
UserParameter=notifyd.tcp.connection.num,var=$(ps -ef | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }');sudo netstat -ntp | grep $var | grep ESTABLISHED | wc -l

# This is to get established connection to postgres server, dport 5432, sum number, return value will be integrity
UserParameter=notifyd.postgres.connection,var=$(ps -ef | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }');sudo netstat -ntp | grep $var | grep ESTABLISHED | grep :5432 | wc -l

# This is to get close_wait connection regarding Apple Push Notification Service (APNS). Feedback service
UserParameter=notifyd.apns.tcp.close.wait,var=$(ps -ef | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }');sudo netstat -ntp | grep $var | grep :2196| grep CLOSE_WAIT | wc -l

# This is to get established connection regarding Apple Push Notification Service (APNS). Feedback service
UserParameter=notifyd.apns.tcp.connection,var=$(ps -ef | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }');sudo netstat -ntp | grep $var | grep :2196| grep ESTABLISHED | wc -l

# This is to get established connection to redis server, dport 6379, sum number, return value will be integrity
UserParameter=notifyd.redis.connection,var=$(ps -ef | grep -v grep |grep notifyd.rb | grep nobody | awk '{ print $2 }');sudo netstat -ntp | grep $var | grep ESTABLISHED | grep :6379 | wc -l
